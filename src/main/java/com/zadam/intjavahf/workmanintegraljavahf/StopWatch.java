/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.zadam.intjavahf.workmanintegraljavahf;

import java.util.Calendar;
import javax.swing.SwingUtilities;
import java.util.concurrent.locks.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Adam
 */
public class StopWatch extends javax.swing.JFrame {

    public enum StopWatchStates {

        INITIAL, COUNTING, PAUSED
    }

    StopWatchStates stopWatchState = StopWatchStates.INITIAL;

    private Project project = null;
    private Task task = null;
    private User user = null;
    private MainWindow calledFrom = null;

    Thread stopWatchThread = null;
    public int actCounterState = 0;

    public Lock syncObject = new ReentrantLock();
    public boolean runStopWatch = false;

    /**
     * Creates new form StopWatch
     */
    public StopWatch(Project project, Task task, User user, MainWindow calledFrom) {
        initComponents();

        this.project = project;
        this.task = task;
        this.user = user;
        this.calledFrom = calledFrom;

        lblActualProjectName.setText(project.getName());
        lblActualTaskName.setText(task.getName());
        lblActualCreatedBy.setText(user.getName());

        stopWatchThread = new MyThread();
    }

    public class MyThread extends Thread {

        public void run() {
            while (true) {
                try {
                    syncObject.lock();

                    if (!runStopWatch) {
                        break;
                    }

                    actCounterState += 1;

                    SwingUtilities.invokeLater(new Runnable() {
                        public void run() {
                            // convert to display form (from seconds
                            String seconds = String.valueOf(actCounterState % 60);
                            String minutes = String.valueOf((actCounterState / 60) % 60);
                            String hours = String.valueOf((actCounterState / 3600) % 60);

                            if (seconds.length() == 1) {
                                seconds = "0" + seconds;
                            }
                            if (minutes.length() == 1) {
                                minutes = "0" + minutes;
                            }
                            if (hours.length() == 1) {
                                hours = "0" + hours;
                            }

                            lblTimer.setText(hours + ":" + minutes + ":" + seconds);
                        }
                    });
                } finally {
                    syncObject.unlock();
                }
                try {
                    Thread.sleep(1000, 0);
                } catch (InterruptedException ex) {
                    Logger.getLogger(StopWatch.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnStart = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        lblTimer = new javax.swing.JLabel();
        lblProjName = new javax.swing.JLabel();
        lblTskName = new javax.swing.JLabel();
        lblCreatedBy = new javax.swing.JLabel();
        lblActualProjectName = new javax.swing.JLabel();
        lblActualTaskName = new javax.swing.JLabel();
        lblActualCreatedBy = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        btnStop.setText("Stop");
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblTimer.setFont(new java.awt.Font("Tahoma", 0, 72)); // NOI18N
        lblTimer.setText("00:00:00");

        lblProjName.setText("Project name");

        lblTskName.setText("Task name");

        lblCreatedBy.setText("Created by");

        lblActualProjectName.setText("act proj");

        lblActualTaskName.setText("act task");

        lblActualCreatedBy.setText("act created by");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblProjName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblActualProjectName))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTskName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblActualTaskName))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lblTimer))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCreatedBy)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblActualCreatedBy)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTimer, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStart)
                    .addComponent(btnStop)
                    .addComponent(btnSave))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProjName)
                    .addComponent(lblActualProjectName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTskName)
                    .addComponent(lblActualTaskName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreatedBy)
                    .addComponent(lblActualCreatedBy))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        switch (stopWatchState) {
            case INITIAL:
                btnStart.setText("Restart");

                try {
                    syncObject.lock();
                    runStopWatch = true;

                    stopWatchThread = new MyThread();
                    stopWatchThread.start();
                } finally {
                    syncObject.unlock();
                }

                stopWatchState = StopWatchStates.COUNTING;
                break;
            case COUNTING:
                try {
                    syncObject.lock();
                    actCounterState = 0;
                } finally {
                    syncObject.unlock();
                }
                break;
            case PAUSED:
                btnStart.setText("Restart");
                btnStop.setText("Stop");

                try {
                    syncObject.lock();
                    runStopWatch = true;

                    stopWatchThread = new MyThread();
                    stopWatchThread.start();
                } finally {
                    syncObject.unlock();
                }

                stopWatchState = StopWatchStates.COUNTING;
                break;
        }
    }//GEN-LAST:event_btnStartActionPerformed

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        switch (stopWatchState) {
            case INITIAL:

                break;
            case COUNTING:
                btnStart.setText("Resume");
                btnStop.setText("Reset");

                try {
                    syncObject.lock();
                    runStopWatch = false;
                    stopWatchThread.interrupt();
                } finally {
                    syncObject.unlock();
                }

                stopWatchState = StopWatchStates.PAUSED;
                break;
            case PAUSED:
                btnStart.setText("Start");
                btnStop.setText("Stop");

                actCounterState = 0;

                lblTimer.setText("00" + ":" + "00" + ":" + "00");

                stopWatchState = StopWatchStates.INITIAL;
                break;
        }
    }//GEN-LAST:event_btnStopActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        MeasureEntry mesEntry = new MeasureEntry();
        
        mesEntry.setCreationDate(Calendar.getInstance().getTime().toString());
        mesEntry.setDuration(Math.floor(((double)actCounterState) / 3600.0 * 100.0) / 100.0);
        mesEntry.setTask(task);
        mesEntry.setUser(user);
        
        calledFrom.saveStopWatchMeasure(mesEntry, project, task, user);
        
        dispose();
    }//GEN-LAST:event_btnSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnStop;
    private javax.swing.JLabel lblActualCreatedBy;
    private javax.swing.JLabel lblActualProjectName;
    private javax.swing.JLabel lblActualTaskName;
    private javax.swing.JLabel lblCreatedBy;
    private javax.swing.JLabel lblProjName;
    private javax.swing.JLabel lblTimer;
    private javax.swing.JLabel lblTskName;
    // End of variables declaration//GEN-END:variables
}
